{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programming\\\\React Code\\\\survatic\\\\src\\\\componets\\\\TextForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function TextForm(props) {\n  _s();\n  const [text, setText] = useState(\"\");\n  // setText(\"new text \"); // corrent way to change the state\n\n  const handleUpClick = () => {\n    // console.log(\"Uppercase was Click\"+text);\n    let newUppertext = text.toUpperCase();\n    setText(newUppertext);\n    props.showAlart(\" : Convert to UpperCase Successfully.\", \"success\");\n  };\n  const handleLowerClick = () => {\n    let newLowertext = text.toLowerCase();\n    setText(newLowertext);\n    props.showAlart(\" : Convert to LowerCase Successfully.\", \"success\");\n  };\n  const handleOnChange = event => {\n    // console.log(\"On Change\");\n    setText(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      style: {\n        color: props.mode === 'light' ? 'black' : 'white'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"myBox\",\n        className: \"form-label\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: props.heading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 55\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"form-control\",\n          value: text,\n          onChange: handleOnChange,\n          style: {\n            backgroundColor: props.mode === 'light' ? 'white' : '#042743',\n            color: props.mode === 'light' ? 'black' : 'white'\n          },\n          id: \"myBox\",\n          rows: \"12\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary mx-2\",\n        onClick: handleUpClick,\n        children: \"Convert to Uppercase\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary mx-2\",\n        onClick: handleLowerClick,\n        children: \"Convert to Lowercase\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container my-3\",\n      style: {\n        color: props.mode === 'light' ? 'black' : 'white'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Your text Summary \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [text.split(\" \").length, \" words and \", text.length, \" characters\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Take\", 0.008 * text.split(\" \").length, \" mininute to read.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Preview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: text.length > 0 ? text : \"Write any text to previwe here....\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n_s(TextForm, \"/31x6IKLd9hKJNRoFN2Lb7ghI70=\");\n_c = TextForm;\nvar _c;\n$RefreshReg$(_c, \"TextForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","TextForm","props","_s","text","setText","handleUpClick","newUppertext","toUpperCase","showAlart","handleLowerClick","newLowertext","toLowerCase","handleOnChange","event","target","value","children","className","style","color","mode","htmlFor","heading","fileName","_jsxFileName","lineNumber","columnNumber","onChange","backgroundColor","id","rows","onClick","split","length","_c","$RefreshReg$"],"sources":["D:/Programming/React Code/survatic/src/componets/TextForm.js"],"sourcesContent":["import React,{useState} from 'react'\r\n\r\n\r\n\r\nexport default function TextForm(props) {\r\n    const [text,setText]  = useState(\"\");\r\n    // setText(\"new text \"); // corrent way to change the state\r\n\r\n    const handleUpClick= ()=>{\r\n        // console.log(\"Uppercase was Click\"+text);\r\n        let newUppertext=text.toUpperCase();\r\n        setText(newUppertext);\r\n        props.showAlart(\" : Convert to UpperCase Successfully.\",\"success\");\r\n    }\r\n    const handleLowerClick= ()=>{\r\n        let newLowertext=text.toLowerCase();\r\n        setText(newLowertext);\r\n        props.showAlart(\" : Convert to LowerCase Successfully.\",\"success\");\r\n    }\r\n        const handleOnChange= (event)=>{\r\n            // console.log(\"On Change\");\r\n            setText(event.target.value);\r\n    }\r\n  return (\r\n    <>\r\n    <div className='container' style={{color : props.mode === 'light' ? 'black' :'white'}} >\r\n        <label htmlFor=\"myBox\" className=\"form-label\"><h1>{props.heading }</h1></label>\r\n        \r\n        <div className=\"mb-3\">\r\n        <textarea className=\"form-control\" value = {text} onChange={handleOnChange} style={{backgroundColor : props.mode === 'light' ? 'white' :'#042743', color : props.mode === 'light' ? 'black' :'white'}} id=\"myBox\" rows=\"12\"></textarea>\r\n        </div>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleUpClick}>Convert to Uppercase</button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleLowerClick}>Convert to Lowercase</button>\r\n\r\n    </div>\r\n    <div className='container my-3' style={{color : props.mode === 'light' ? 'black' :'white'}}  >\r\n        <h1>Your text Summary </h1>\r\n        <p>{text.split(\" \").length} words and {text.length} characters</p>\r\n        <p>Take{0.008*text.split(\" \").length} mininute to read.</p>\r\n        <h2>Preview</h2>\r\n        <p>{text.length>0 ?text : \"Write any text to previwe here....\"}</p>\r\n    </div>\r\n    </>\r\n  )\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}