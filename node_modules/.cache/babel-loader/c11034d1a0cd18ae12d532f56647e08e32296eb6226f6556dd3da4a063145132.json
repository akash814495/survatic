{"ast":null,"code":"import'./App.css';// import About from './componets/About';\nimport Navbar from'./componets/Navbar';import TextForm from'./componets/TextForm';import Alart from'./componets/Alart';// import About from './componets/About';\nimport React,{useState}from'react';// import {\n//   BrowserRouter as Router,\n//   Routes,\n//   Route\n// } from \"react-router-dom\";\nimport{jsx as _jsx,Fragment as _Fragment,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[mode,setMode]=useState(\"light\");const[alart,setAlart]=useState(null);const showAlart=(message,type)=>{setAlart({msg:message,type:type});setTimeout(()=>{setAlart(null);},1500);};const switchToMode=()=>{if(mode===\"light\"){setMode(\"dark\");document.body.style.backgroundColor=\"#042743\";showAlart(\" : Dark mode has been enable.\",\"success\");// setInterval(() => {\n//   document.title = \"SurVatic is Amazing\"\n// }, 2000);\n// setInterval(() => {\n//   document.title = \"Install SurVatic\"\n// }, 1500);   \n}else{setMode(\"light\");document.body.style.backgroundColor=\"white\";showAlart(\" : Light mode has been enable.\",\"success\");// document.title = \"SurVatic - Light Mode\"     \n}};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Navbar,{Title:\"SurVatic\",aboutText:\"About\",mode:mode,switchToMode:switchToMode}),/*#__PURE__*/_jsx(Alart,{alart:alart}),/*#__PURE__*/_jsx(\"div\",{className:\"container  my-3\",children:/*#__PURE__*/_jsx(TextForm,{heading:\"Enter text to analyze\",showAlart:showAlart,mode:mode})})]});}export default App;","map":{"version":3,"names":["Navbar","TextForm","Alart","React","useState","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","App","mode","setMode","alart","setAlart","showAlart","message","type","msg","setTimeout","switchToMode","document","body","style","backgroundColor","children","Title","aboutText","className","heading"],"sources":["D:/Programming/React Code/survatic/src/App.js"],"sourcesContent":["\nimport './App.css';\n// import About from './componets/About';\nimport Navbar from './componets/Navbar';\nimport TextForm from './componets/TextForm';\nimport Alart from './componets/Alart';\n// import About from './componets/About';\nimport React,{useState} from 'react'\n\n// import {\n//   BrowserRouter as Router,\n//   Routes,\n//   Route\n  \n// } from \"react-router-dom\";\nfunction App() {\n  const [mode, setMode] = useState(\"light\")\n  const [alart, setAlart] = useState(null)\n  \n  \n  const showAlart=(message,type)=> {\n    setAlart({\n        msg : message,\n        type : type\n      })\n        setTimeout(() => {\n          setAlart(null);\n        },1500);\n  }\n  \n  const switchToMode =()=> {\n    if(mode === \"light\"){\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#042743\";\n      showAlart(\" : Dark mode has been enable.\",\"success\")\n      // setInterval(() => {\n      //   document.title = \"SurVatic is Amazing\"\n      // }, 2000);\n      // setInterval(() => {\n      //   document.title = \"Install SurVatic\"\n      // }, 1500);   \n    }\n    else{\n      setMode(\"light\");     \n      document.body.style.backgroundColor = \"white\";\n      showAlart(\" : Light mode has been enable.\",\"success\")\n      // document.title = \"SurVatic - Light Mode\"     \n    }\n  }  \n  return (\n    <>\n    \n      {/* <Router> */}\n\n        <Navbar Title=\"SurVatic\" aboutText = \"About\" mode ={mode} switchToMode={switchToMode} />\n        <Alart alart= {alart} />\n        <div className=\"container  my-3\"> \n        {/* <Routes> */}\n            {/* <Route exact path=\"/About\" element={<About />}/> */}\n            \n            <TextForm heading=\"Enter text to analyze\" showAlart ={ showAlart}  mode={mode}  />\n            \n          {/* </Routes> */}\n        </div>\n   \n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n\n"],"mappings":"AACA,MAAO,WAAW,CAClB;AACA,MAAO,CAAAA,MAAM,KAAM,oBAAoB,CACvC,MAAO,CAAAC,QAAQ,KAAM,sBAAsB,CAC3C,MAAO,CAAAC,KAAK,KAAM,mBAAmB,CACrC;AACA,MAAO,CAAAC,KAAK,EAAEC,QAAQ,KAAO,OAAO,CAEpC;AACA;AACA;AACA;AAEA;AAAA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,QAAA,IAAAC,SAAA,CAAAC,IAAA,IAAAC,KAAA,yBACA,QAAS,CAAAC,GAAGA,CAAA,CAAG,CACb,KAAM,CAACC,IAAI,CAAEC,OAAO,CAAC,CAAGT,QAAQ,CAAC,OAAO,CAAC,CACzC,KAAM,CAACU,KAAK,CAAEC,QAAQ,CAAC,CAAGX,QAAQ,CAAC,IAAI,CAAC,CAGxC,KAAM,CAAAY,SAAS,CAACA,CAACC,OAAO,CAACC,IAAI,GAAI,CAC/BH,QAAQ,CAAC,CACLI,GAAG,CAAGF,OAAO,CACbC,IAAI,CAAGA,IACT,CAAC,CAAC,CACAE,UAAU,CAAC,IAAM,CACfL,QAAQ,CAAC,IAAI,CAAC,CAChB,CAAC,CAAC,IAAI,CAAC,CACb,CAAC,CAED,KAAM,CAAAM,YAAY,CAAEA,CAAA,GAAK,CACvB,GAAGT,IAAI,GAAK,OAAO,CAAC,CAClBC,OAAO,CAAC,MAAM,CAAC,CACfS,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,CAAG,SAAS,CAC/CT,SAAS,CAAC,+BAA+B,CAAC,SAAS,CAAC,CACpD;AACA;AACA;AACA;AACA;AACA;AACF,CAAC,IACG,CACFH,OAAO,CAAC,OAAO,CAAC,CAChBS,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,CAAG,OAAO,CAC7CT,SAAS,CAAC,gCAAgC,CAAC,SAAS,CAAC,CACrD;AACF,CACF,CAAC,CACD,mBACEN,KAAA,CAAAF,SAAA,EAAAkB,QAAA,eAIIpB,IAAA,CAACN,MAAM,EAAC2B,KAAK,CAAC,UAAU,CAACC,SAAS,CAAG,OAAO,CAAChB,IAAI,CAAGA,IAAK,CAACS,YAAY,CAAEA,YAAa,CAAE,CAAC,cACxFf,IAAA,CAACJ,KAAK,EAACY,KAAK,CAAGA,KAAM,CAAE,CAAC,cACxBR,IAAA,QAAKuB,SAAS,CAAC,iBAAiB,CAAAH,QAAA,cAI5BpB,IAAA,CAACL,QAAQ,EAAC6B,OAAO,CAAC,uBAAuB,CAACd,SAAS,CAAIA,SAAU,CAAEJ,IAAI,CAAEA,IAAK,CAAG,CAAC,CAGjF,CAAC,EAGR,CAAC,CAEP,CAEA,cAAe,CAAAD,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}