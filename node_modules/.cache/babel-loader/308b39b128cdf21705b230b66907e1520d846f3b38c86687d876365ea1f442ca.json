{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programming\\\\React Code\\\\survatic\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\n// import About from './componets/About';\nimport Navbar from './componets/Navbar';\nimport TextForm from './componets/TextForm';\nimport Alart from './componets/Alart';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [mode, setMode] = useState(\"light\");\n  const [alart, setAlart] = useState(null);\n  const showAlart = (message, type) => {\n    setAlart({\n      msg: message,\n      type: type\n    });\n  };\n  const switchToMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#042743\";\n      showAlart(\"Dark mode enable.\", \"Success\");\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlart(\"Light mode enable.\", success);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      Title: \"SurVatic\",\n      aboutText: \"About\",\n      mode: mode,\n      switchToMode: switchToMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Alart, {\n      alart: alart\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container  my-3\",\n      children: /*#__PURE__*/_jsxDEV(TextForm, {\n        heading: \"Wellcome to My page..\",\n        mode: mode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"w2BoFVPF8sJkG7pCNv7vhewistw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Navbar","TextForm","Alart","React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","mode","setMode","alart","setAlart","showAlart","message","type","msg","switchToMode","document","body","style","backgroundColor","success","children","Title","aboutText","fileName","_jsxFileName","lineNumber","columnNumber","className","heading","_c","$RefreshReg$"],"sources":["D:/Programming/React Code/survatic/src/App.js"],"sourcesContent":["\nimport './App.css';\n// import About from './componets/About';\nimport Navbar from './componets/Navbar';\nimport TextForm from './componets/TextForm';\nimport Alart from './componets/Alart';\nimport React,{useState} from 'react'\n\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\")\n  const [alart, setAlart] = useState(null)\n  \n  \n  const showAlart=(message,type)=> {\n    setAlart({\n        msg : message,\n        type : type\n    })\n  }\n  \n  const switchToMode =()=> {\n    if(mode === \"light\"){\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#042743\";\n      showAlart(\"Dark mode enable.\",\"Success\")\n     \n      \n    }\n    else{\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlart(\"Light mode enable.\",success)\n      \n    }\n  }  \n  return (\n    <>\n  \n    <Navbar Title=\"SurVatic\" aboutText = \"About\" mode ={mode} switchToMode={switchToMode} />\n    <Alart alart= {alart} />\n\n        <div className=\"container  my-3\">\n        {/* <About/> */}\n        <TextForm heading = \"Wellcome to My page..\" mode ={mode}/>\n        </div>\n    </>\n  );\n}\n\nexport default App;\n\n"],"mappings":";;AACA,OAAO,WAAW;AAClB;AACA,OAAOA,MAAM,MAAM,oBAAoB;AACvC,OAAOC,QAAQ,MAAM,sBAAsB;AAC3C,OAAOC,KAAK,MAAM,mBAAmB;AACrC,OAAOC,KAAK,IAAEC,QAAQ,QAAO,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAGpC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,OAAO,CAAC;EACzC,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAGxC,MAAMW,SAAS,GAACA,CAACC,OAAO,EAACC,IAAI,KAAI;IAC/BH,QAAQ,CAAC;MACLI,GAAG,EAAGF,OAAO;MACbC,IAAI,EAAGA;IACX,CAAC,CAAC;EACJ,CAAC;EAED,MAAME,YAAY,GAAEA,CAAA,KAAK;IACvB,IAAGR,IAAI,KAAK,OAAO,EAAC;MAClBC,OAAO,CAAC,MAAM,CAAC;MACfQ,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAG,SAAS;MAC/CR,SAAS,CAAC,mBAAmB,EAAC,SAAS,CAAC;IAG1C,CAAC,MACG;MACFH,OAAO,CAAC,OAAO,CAAC;MAChBQ,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAG,OAAO;MAC7CR,SAAS,CAAC,oBAAoB,EAACS,OAAO,CAAC;IAEzC;EACF,CAAC;EACD,oBACElB,OAAA,CAAAE,SAAA;IAAAiB,QAAA,gBAEAnB,OAAA,CAACN,MAAM;MAAC0B,KAAK,EAAC,UAAU;MAACC,SAAS,EAAG,OAAO;MAAChB,IAAI,EAAGA,IAAK;MAACQ,YAAY,EAAEA;IAAa;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACxFzB,OAAA,CAACJ,KAAK;MAACW,KAAK,EAAGA;IAAM;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAEpBzB,OAAA;MAAK0B,SAAS,EAAC,iBAAiB;MAAAP,QAAA,eAEhCnB,OAAA,CAACL,QAAQ;QAACgC,OAAO,EAAG,uBAAuB;QAACtB,IAAI,EAAGA;MAAK;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrD,CAAC;EAAA,eACR,CAAC;AAEP;AAACrB,EAAA,CAvCQD,GAAG;AAAAyB,EAAA,GAAHzB,GAAG;AAyCZ,eAAeA,GAAG;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}