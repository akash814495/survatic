{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programming\\\\React Code\\\\survatic\\\\src\\\\componets\\\\TextForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TextForm(props) {\n  _s();\n  const [text, setText] = useState(\"Enter text here\");\n  // setText(\"new text \"); // corrent way to change the state\n\n  const handleUpClick = () => {\n    // console.log(\"Uppercase was Click\"+text);\n    let newtext = text.toUpperCase();\n    setText(newtext);\n  };\n  const handleOnChange = event => {\n    // console.log(\"On Change\");\n    setText(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"myBox\",\n      className: \"form-label\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: props.heading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 55\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"form-control\",\n        value: text,\n        onChange: handleOnChange,\n        id: \"myBox\",\n        rows: \"12\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-primery\",\n      onClick: handleUpClick,\n      children: \"Convert to Uppercase\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n_s(TextForm, \"vclEtgnTRaw1ImzvXoSWKDVNil8=\");\n_c = TextForm;\nvar _c;\n$RefreshReg$(_c, \"TextForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TextForm","props","_s","text","setText","handleUpClick","newtext","toUpperCase","handleOnChange","event","target","value","children","htmlFor","className","heading","fileName","_jsxFileName","lineNumber","columnNumber","onChange","id","rows","onClick","_c","$RefreshReg$"],"sources":["D:/Programming/React Code/survatic/src/componets/TextForm.js"],"sourcesContent":["import React,{useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    const [text,setText]  = useState(\"Enter text here\");\r\n    // setText(\"new text \"); // corrent way to change the state\r\n\r\n    const handleUpClick= ()=>{\r\n        // console.log(\"Uppercase was Click\"+text);\r\n        let newtext=text.toUpperCase();\r\n        setText(newtext);\r\n    }\r\n        const handleOnChange= (event)=>{\r\n            // console.log(\"On Change\");\r\n            setText(event.target.value);\r\n    }\r\n  return (\r\n    <div>\r\n        <label htmlFor=\"myBox\" className=\"form-label\"><h1>{props.heading }</h1></label>\r\n        \r\n        <div className=\"mb-3\">\r\n        <textarea className=\"form-control\" value = {text} onChange={handleOnChange} id=\"myBox\" rows=\"12\"></textarea>\r\n        </div>\r\n        <button className=\"btn btn-primery\" onClick={handleUpClick}>Convert to Uppercase</button>\r\n\r\n    </div>\r\n  )\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAEC,QAAQ,QAAO,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEpC,eAAe,SAASC,QAAQA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACpC,MAAM,CAACC,IAAI,EAACC,OAAO,CAAC,GAAIP,QAAQ,CAAC,iBAAiB,CAAC;EACnD;;EAEA,MAAMQ,aAAa,GAAEA,CAAA,KAAI;IACrB;IACA,IAAIC,OAAO,GAACH,IAAI,CAACI,WAAW,CAAC,CAAC;IAC9BH,OAAO,CAACE,OAAO,CAAC;EACpB,CAAC;EACG,MAAME,cAAc,GAAGC,KAAK,IAAG;IAC3B;IACAL,OAAO,CAACK,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACnC,CAAC;EACH,oBACEZ,OAAA;IAAAa,QAAA,gBACIb,OAAA;MAAOc,OAAO,EAAC,OAAO;MAACC,SAAS,EAAC,YAAY;MAAAF,QAAA,eAACb,OAAA;QAAAa,QAAA,EAAKX,KAAK,CAACc;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eAE/EpB,OAAA;MAAKe,SAAS,EAAC,MAAM;MAAAF,QAAA,eACrBb,OAAA;QAAUe,SAAS,EAAC,cAAc;QAACH,KAAK,EAAIR,IAAK;QAACiB,QAAQ,EAAEZ,cAAe;QAACa,EAAE,EAAC,OAAO;QAACC,IAAI,EAAC;MAAI;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAW;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvG,CAAC,eACNpB,OAAA;MAAQe,SAAS,EAAC,iBAAiB;MAACS,OAAO,EAAElB,aAAc;MAAAO,QAAA,EAAC;IAAoB;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAExF,CAAC;AAEV;AAACjB,EAAA,CAxBuBF,QAAQ;AAAAwB,EAAA,GAARxB,QAAQ;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}