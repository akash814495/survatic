{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programming\\\\React Code\\\\survatic\\\\src\\\\App.js\";\nimport './App.css';\n// import About from './componets/About';\nimport Navbar from './componets/Navbar';\nimport TextForm from './componets/TextForm';\nimport Alart from './componets/Alart';\nimport About from './componets/About';\nimport React, { useState } from 'react';\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nfunction App() {\n  const [mode, setMode] = useState(\"light\");\n  const [alart, setAlart] = useState(null);\n  const showAlart = (message, type) => {\n    setAlart({\n      msg: message,\n      type: type\n    });\n    setTimeout(() => {\n      setAlart(null);\n    }, 1500);\n  };\n  const switchToMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#042743\";\n      showAlart(\" : Dark mode has been enable.\", \"success\");\n      // setInterval(() => {\n      //   document.title = \"SurVatic is Amazing\"\n      // }, 2000);\n      // setInterval(() => {\n      //   document.title = \"Install SurVatic\"\n      // }, 1500);   \n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlart(\" : Light mode has been enable.\", \"success\");\n      // document.title = \"SurVatic - Light Mode\"     \n    }\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Router, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Navbar, {\n    Title: \"SurVatic\",\n    aboutText: \"About\",\n    mode: mode,\n    switchToMode: switchToMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Alart, {\n    alart: alart,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container  my-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Routes, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    path: \"/About\",\n    element: /*#__PURE__*/React.createElement(About, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 43\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/\",\n    element: /*#__PURE__*/React.createElement(TextForm, {\n      heading: \"Enter text to analyze\",\n      mode: mode,\n      showAlert: showAlart,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 38\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  })))));\n}\nexport default App;","map":{"version":3,"names":["Navbar","TextForm","Alart","About","React","useState","BrowserRouter","Router","Routes","Route","App","mode","setMode","alart","setAlart","showAlart","message","type","msg","setTimeout","switchToMode","document","body","style","backgroundColor","createElement","Fragment","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","Title","aboutText","className","path","element","heading","showAlert"],"sources":["D:/Programming/React Code/survatic/src/App.js"],"sourcesContent":["\nimport './App.css';\n// import About from './componets/About';\nimport Navbar from './componets/Navbar';\nimport TextForm from './componets/TextForm';\nimport Alart from './componets/Alart';\nimport About from './componets/About';\nimport React,{useState} from 'react'\n\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route\n  \n} from \"react-router-dom\";\nfunction App() {\n  const [mode, setMode] = useState(\"light\")\n  const [alart, setAlart] = useState(null)\n  \n  \n  const showAlart=(message,type)=> {\n    setAlart({\n        msg : message,\n        type : type\n      })\n        setTimeout(() => {\n          setAlart(null);\n        },1500);\n  }\n  \n  const switchToMode =()=> {\n    if(mode === \"light\"){\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#042743\";\n      showAlart(\" : Dark mode has been enable.\",\"success\")\n      // setInterval(() => {\n      //   document.title = \"SurVatic is Amazing\"\n      // }, 2000);\n      // setInterval(() => {\n      //   document.title = \"Install SurVatic\"\n      // }, 1500);   \n    }\n    else{\n      setMode(\"light\");     \n      document.body.style.backgroundColor = \"white\";\n      showAlart(\" : Light mode has been enable.\",\"success\")\n      // document.title = \"SurVatic - Light Mode\"     \n    }\n  }  \n  return (\n    <>\n    \n      <Router>\n\n        <Navbar Title=\"SurVatic\" aboutText = \"About\" mode ={mode} switchToMode={switchToMode} />\n        <Alart alart= {alart} />\n        <div className=\"container  my-3\"> \n        <Routes>\n            <Route path=\"/About\" element={<About />}/>\n            \n            <Route path=\"/\" element={<TextForm heading=\"Enter text to analyze\"  mode={mode} showAlert={showAlart} />}/>\n            \n          </Routes>\n        </div>\n   \n      </Router>\n    </>\n  );\n}\n\nexport default App;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}